---
- hosts: local
  connection: local
  gather_facts: False
  vars:
    instance_type: t2.micro
    security_group: your security group
    image: aws image
    keypair: your keypair
    region: your region
    count: 1
  vars_files:
    - aws_keys.yml
  tasks:
    - name: Create a security group
      ec2_group:
        name: Portfolio
        description: The webservers security group
        region: your region
        aws_access_key: xxxxxxxxxxxxx
        aws_secret_key: xxxxxxxxxxxxx
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0

    - name: Launch the new EC2 Instance
      ec2:
        aws_access_key: xxxxxxxxxxxxx
        aws_secret_key: xxxxxxxxxxxxx
        group: Portfolio
        instance_type: t2.micro
        image: aws image
        wait: true 
        region: your region
        keypair: your keypair
        count: 1
      register: ec2

    - name: Add the newly created host so that we can further contact it
      add_host:
        name: "{{ item.public_ip }}"
        groups: webservers
      with_items: "{{ ec2.instances }}"

    - name: Add tag to Instance(s)
      ec2_tag:
        aws_access_key: xxxxxxxxxxxxx
        aws_secret_key: xxxxxxxxxxxxx
        resource: "{{ item.id }}"
        region: your region
        state: "present"
      with_items: "{{ ec2.instances }}"
      args:
        tags:
          Type: webserver

    - name: Wait for SSH to come up
      wait_for:
        host: "{{ item.public_ip }}"
        port: 22 
        state: started 
      with_items: "{{ ec2.instances }}"
- hosts: webservers
  remote_user: ubuntu
  become: yes
  gather_facts: no
  pre_tasks:
   - name: 'install python'
     raw: 'sudo apt-get -y install python3'

   - name: "UFW - Allow HTTP on port 80"
     ufw:
       rule: allow
       port: 80
       proto: tcp
   
   - name: Install HAProxy
     apt: name=haproxy state=present
